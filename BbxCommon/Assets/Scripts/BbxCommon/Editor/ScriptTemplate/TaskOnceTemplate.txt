using System;
using System.Collections.Generic;
using BbxCommon;

public class #SCRIPT_NAME# : TaskOnceBase
{
    public int IntValue;

    public enum EField
    {
        IntValue,
    }

    protected override Type GetFieldEnumType()
    {
        return typeof(EField);
    }

    protected override void RegisterFields()
    {
        RegisterField(EField.IntValue, IntValue);
    }

    public override void ReadFieldInfo(int fieldEnum, TaskBridgeFieldInfo fieldInfo, TaskContextBase context)
    {
        switch (fieldEnum)
        {
            case (int)EField.IntValue:
                IntValue = ReadInt(fieldInfo, context);
                break;
        }
    }

    protected override void OnTaskCollect()
    {
        IntValue = 0;
    }

    protected override EOnceState OnExecute()
    {
        return EOnceState.Succeeded;
    }
}